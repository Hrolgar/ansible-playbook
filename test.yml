- name: Download Servarr & Bazarr Backups and Upload to Proton Drive, plus ullrservices Docker Compose Files
  hosts: localhost
  gather_facts: true
  vars:
    remote_path_base: "/opt/nas/apps"
    today: "{{ ansible_date_time.date }}"
    # Local backup folder (inside your Semaphore container)
    local_backup_root: "/tmp/ansible_vm_backups/{{ today }}"
    proton_remote: "proton-remote"
    retention_count: 5
    services:
      - name: radarr
        backup_path: "{{ remote_path_base }}/radarr/Backups/scheduled/*.zip"
      - name: bazarr
        backup_path: "{{ remote_path_base }}/bazarr/backup/*.zip"

  tasks:
    #######################################################
    # Part 1 – Unified Service Backup Download & Upload
    #######################################################
    - name: Ensure local backup directory for each service exists
      file:
        path: "{{ local_backup_root }}/{{ item.name }}"
        state: directory
        mode: "0755"
      loop: "{{ services }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Find latest backup path for each service
      shell: "ls -t {{ item.backup_path }} | head -n 1"
      delegate_to: ullrservarr
      register: latest_backups
      retries: 3
      delay: 5
      until: latest_backups.rc == 0
      loop: "{{ services }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Debug latest backup paths
      debug:
        msg: "{{ latest_backups.results | map(attribute='stdout') | list }}"

    - name: Set fact mapping service names to backup file paths
      set_fact:
        service_backups: >-
          {{
            dict(services | map(attribute='name') | list |
            zip(latest_backups.results | map(attribute='stdout') | list))
          }}

    - name: Set fact for backup filenames (basename)
      set_fact:
        service_backup_names: >-
          {{
            dict(services | map(attribute='name') | list |
            zip(latest_backups.results | map(attribute='stdout') | map('basename') | list))
          }}

    - name: Fetch backup file for each service
      fetch:
        src: "{{ service_backups[item.name] }}"
        dest: "{{ local_backup_root }}/{{ item.name }}/"
        flat: yes
      delegate_to: ullrservarr
      loop: "{{ services }}"
      loop_control:
        label: "{{ item.name }}"
      register: fetch_result
      retries: 3
      delay: 5
      until: fetch_result is success

    - name: Upload backup files to Proton Drive for each service
      shell: >
        rclone copy
        "{{ local_backup_root }}/{{ item.name }}/{{ service_backup_names[item.name] }}"
        "{{ proton_remote }}:backups/{{ today }}/ullrservices/{{ item.name }}"
      loop: "{{ services }}"
      loop_control:
        label: "{{ item.name }}"
      environment:
        RCLONE_CONFIG_FILE: "/home/hrolgar/.config/rclone/rclone.conf"

    - name: Cleanup old backups in Proton Drive for Servarr backups
      shell: |
        rclone lsjson "{{ proton_remote }}:backups/{{ today }}/ullrservices/" --recursive |
        jq -r '.[] | select(.Path | test(".*\\.zip$")) | .Path' |
        sort -r | tail -n +{{ retention_count + 1 }} |
        xargs -r -I {} rclone delete "{{ proton_remote }}:backups/{}"
      environment:
        RCLONE_CONFIG_FILE: "/home/hrolgar/.config/rclone/rclone.conf"

    #######################################################
    # Part 2 – Docker Compose Files Backup & Upload
    #######################################################
    - name: Ensure local backup folder for ullrservices exists
      file:
        path: "{{ local_backup_root }}/ullrservices"
        state: directory
        mode: "0755"

    - name: Copy Docker Compose file for arr-compose.yml locally (Folder 41)
      copy:
        src: "/host_apps/portainer_data/compose/41/docker-compose.yml"
        dest: "{{ local_backup_root }}/ullrservices/arr-compose.yml"
        remote_src: yes

    - name: Upload arr-compose.yml to Proton Drive
      shell: >
        rclone copy
        "{{ local_backup_root }}/ullrservices/arr-compose.yml"
        "{{ proton_remote }}:backups/{{ today }}/ullrservices/"
      environment:
        RCLONE_CONFIG_FILE: "/home/hrolgar/.config/rclone/rclone.conf"

    - name: Copy Docker Compose file for arr-extra-compose.yml locally (Folder 40)
      copy:
        src: "/host_apps/portainer_data/compose/40/docker-compose.yml"
        dest: "{{ local_backup_root }}/ullrservices/arr-extra-compose.yml"
        remote_src: yes

    - name: Upload arr-extra-compose.yml to Proton Drive
      shell: >
        rclone copy
        "{{ local_backup_root }}/ullrservices/arr-extra-compose.yml"
        "{{ proton_remote }}:backups/{{ today }}/ullrservices/"
      environment:
        RCLONE_CONFIG_FILE: "/home/hrolgar/.config/rclone/rclone.conf"

    #######################################################
    # Final Cleanup
    #######################################################
    - name: Remove local backups
      file:
        path: "{{ local_backup_root }}"
        state: absent
      ignore_errors: true
