---
- name: Stop & archive Jellyfin on ullrmedia
  hosts: ullrmedia
  gather_facts: true
  vars:
    today: "{{ ansible_date_time.date }}"
    backup_name: "jellyfin_backup_{{ today }}.tar.gz"
    remote_app_path: /opt/nas/apps/Jellyfin
    proton_remote: "proton-remote"

  tasks:


    - name: Verify tarball exists
      shell: ls -lh /tmp/{{ backup_name }}
      register: check_tar
      failed_when: check_tar.rc != 0

    - debug:
        var: check_tar.stdout

- name: Fetch, package compose & upload to Proton Drive
  hosts: localhost
  gather_facts: true
  vars:
    today: "{{ ansible_date_time.date }}"
    service_name: jellyfin
    backup_name: "jellyfin_backup_{{ today }}.tar.gz"
    compose_file: "docker-compose-{{ today }}.yml"
    # path on your Ansible-host VM where you keep compose files
    compose_local_src: "/host_apps/portainer_data/compose/10/docker-compose.yml"
    local_backup_root: "/ansible-backups/{{ today }}/{{ service_name }}"
    proton_remote: "proton-remote"

  tasks:
        
    - name: Upload Jellyfin backup to Proton Drive
      shell: |
        /usr/bin/rclone \
          --config /root/.config/rclone/rclone.conf \
          copy \
            "{{ local_backup_root }}/{{ backup_name }}" \
            "{{ proton_remote }}:backups/{{ today }}/ullrmedia/" \
          --verbose
      register: upload_result
      failed_when: upload_result.rc != 0



    - name: Upload dockerâ€‘compose backup to Proton Drive
      shell: |
        /usr/bin/rclone \
          --config /root/.config/rclone/rclone.conf \
          copy \
            "{{ local_backup_root }}/compose/{{ compose_file }}" \
            "{{ proton_remote }}:backups/{{ today }}/ullrmedia/" \
          --verbose
      register: upload_comp_result
      failed_when: upload_comp_result.rc != 0

    - name: Remove remote tarball
      ansible.builtin.file:
      shell: ssh ullrmedia "rm -f /tmp/{{ backup_name }}"
        path: "/tmp/{{ backup_name }}"
        state: absent
      delegate_to: ullrmedia

    - name: Cleanup local backup staging area
      file:
        path: "{{ local_backup_root }}"
        state: absent
        ignore_errors: true
