---
- name: Zip qBittorrent data on ullrqbit
  hosts: ullrqbit
  gather_facts: true
  vars:
    today: "{{ ansible_date_time.date }}"
    service_name: qbittorrent
    remote_data_path: "/opt/nas/apps/qbittorrent"
    remote_tmp_root: "/tmp/ansible-backups/{{ today }}/{{ service_name }}"
    backup_name: "{{ service_name }}-{{ today }}.zip"

  tasks:
    - name: Ensure remote staging directory exists
      file:
        path: "{{ remote_tmp_root }}"
        state: directory
        mode: '0755'

    - name: Create qBittorrent zip on remote
      shell: |
        zip -r "{{ remote_tmp_root }}/{{ backup_name }}" "{{ remote_data_path }}" -x "*ipc-socket*"
      args:
        chdir: /
      register: zip_result
      retries: 3
      delay: 5
      until: zip_result.rc == 0

    - name: Verify remote zip exists
      ansible.builtin.stat:
        path: "{{ remote_tmp_root }}/{{ backup_name }}"
      register: zip_stat
      failed_when: not zip_stat.stat.exists

    - debug:
        msg: "Remote zip: {{ zip_stat.stat.size | human_readable }} at {{ zip_stat.stat.path }}"

- name: Fetch, upload qBittorrent backup & Docker‑Compose to Proton Drive
  hosts: localhost
  gather_facts: true
  vars:
    today: "{{ ansible_date_time.date }}"
    service_name: qbittorrent
    backup_name: "{{ service_name }}-{{ today }}.zip"
    local_backup_root: "/ansible-backups/{{ today }}/{{ service_name }}"
    proton_remote: "proton-remote"
    compose_dest_name: "qbittorrent-compose-{{ today }}.yml"

  tasks:
    - name: Ensure local staging directory exists
      ansible.builtin.file:
        path: "{{ local_backup_root }}"
        state: directory
        mode: '0755'

    - name: Fetch qBittorrent zip from ullrqbit
      fetch:
        src: "/tmp/ansible-backups/{{ today }}/{{ service_name }}/{{ backup_name }}"
        dest: "{{ local_backup_root }}/"
        flat: yes
      delegate_to: ullrqbit

    - name: Ensure compose folder exists locally
      ansible.builtin.file:
        path: "{{ local_backup_root }}/compose"
        state: directory
        mode: '0755'

    - name: Copy qBittorrent Docker‑Compose file from host mount
      ansible.builtin.copy:
        remote_src: yes
        src: "/host_apps/portainer_data/compose/65/docker-compose.yml"
        dest: "{{ local_backup_root }}/compose/{{ compose_dest_name }}"

    - name: Ensure Proton Drive target path exists
      shell: |
        rclone mkdir "{{ proton_remote }}:backups/{{ today }}/ullrqbit/{{ service_name }}"
      register: mkdir_result
      failed_when: mkdir_result.rc != 0 and 'already exists' not in mkdir_result.stderr

    - name: Upload qBittorrent zip to Proton Drive
      shell: |
        rclone copy \
          "{{ local_backup_root }}/{{ backup_name }}" \
          "{{ proton_remote }}:backups/{{ today }}/ullrqbit/{{ service_name }}/" \
          --verbose
      register: upload_zip
      failed_when: upload_zip.rc != 0

    - name: Upload Docker‑Compose YAML to Proton Drive
      shell: |
        rclone copy \
          "{{ local_backup_root }}/compose/{{ compose_dest_name }}" \
          "{{ proton_remote }}:backups/{{ today }}/ullrqbit/{{ service_name }}/compose/" \
          --verbose
      register: upload_compose
      failed_when: upload_compose.rc != 0

    - name: Remove remote staging directory on ullrqbit
      ansible.builtin.file:
        path: "/tmp/ansible-backups/{{ today }}"
        state: absent
      delegate_to: ullrqbit

    - name: Cleanup local staging directory
      ansible.builtin.file:
        path: "{{ local_backup_root }}"
        state: absent
      ignore_errors: true

